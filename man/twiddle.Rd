% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/twiddle.r
\name{~}
\alias{~}
\title{Overloaded tilde operator for in-place object modification.}
\usage{
"~"(x, y = NULL)
}
\arguments{
\item{x}{anything. If \code{x} is an expression wrapped in braces,
then this operator will assume it is a function call with the
first argument intended for assignment of the resulting value.}

\item{y}{anything. Only used for compatibility with the formula operator.}
}
\description{
This function overloads the \code{~} operator to turn statements like
  \code{~\{factor(x, levels = c("A", "B"))\}}
into
  \code{x <- factor(x, levels = c("A", "B")}
while leaving normal formula expressions alone.
}
\details{
In general, if we called \code{~\{someexpr(x, ...)\}}, turn that into
  \code{x <- someexpr(x, ...)}
in the parent environment. Otherwise, treat it as a formula.

This is dangerous meta-programming, but we live on the edge!
}
\examples{
x <- c(1,2,3)
~{factor(x))} # x is now a factor(c(1,2,3), levels = c(1,2,3))

x <- c(1,2,3)
~{sum(x)} # x is now 6
}
\seealso{
\code{\link{~}}
}

